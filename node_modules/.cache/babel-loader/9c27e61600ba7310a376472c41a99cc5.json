{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewUser.vue","mtime":1617122113101},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nexport default {\n  name: 'view-page',\n  data: function data() {\n    return {\n      email: null,\n      firstName: null,\n      lastName: null,\n      city: null,\n      bloodType: null,\n      bloodFactor: null,\n      age: null,\n      telephone: null\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    db.collection('users').where('user_id', '==', to.params.user_id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        next(function (vm) {\n          vm.user_id = doc.data().user_id;\n          vm.firstName = doc.data().firstName, vm.lastName = doc.data().lastName, vm.user_email = doc.data().user_email, vm.city = doc.data().city, vm.age = doc.data().age, vm.telephone = doc.data().telephone, vm.bloodType = doc.data().bloodType, vm.bloodFactor = doc.data().bloodFactor;\n        });\n      });\n    });\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.user_id = doc.data().user_id;\n          _this.firstName = doc.data().firstName, _this.lastName = doc.data().lastName, _this.user_email = doc.data().user_email, _this.city = doc.data().city, _this.age = doc.data().age, _this.telephone = doc.data().telephone, _this.bloodType = doc.data().bloodType, _this.bloodFactor = doc.data().bloodFactor;\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["ViewUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,EAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA,IALA;AAMA,MAAA,WAAA,EAAA,IANA;AAOA,MAAA,GAAA,EAAA,IAPA;AAQA,MAAA,SAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,gBAdA,4BAcA,EAdA,EAcA,IAdA,EAcA,IAdA,EAcA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,EAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SAAA,EACA,EAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,GAAA,QADA,EAEA,EAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,GAAA,UAFA,EAGA,EAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAHA,EAIA,EAAA,CAAA,GAAA,GAAA,GAAA,CAAA,IAAA,GAAA,GAJA,EAKA,EAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SALA,EAMA,EAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SANA,EAOA,EAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,GAAA,WAPA;AAQA,SAVA,CAAA;AAWA,OAZA;AAaA,KAdA;AAeA,GA9BA;AA+BA,EAAA,KAAA,EAAA;AACA,cAAA;AADA,GA/BA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AAEA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AAEA,QAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SAAA,EACA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,GAAA,QADA,EAEA,KAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,GAAA,UAFA,EAGA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAHA,EAIA,KAAA,CAAA,GAAA,GAAA,GAAA,CAAA,IAAA,GAAA,GAJA,EAKA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SALA,EAMA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,GAAA,SANA,EAOA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,GAAA,WAPA;AAQA,SAVA;AAWA,OAbA;AAcA;AAjBA;AAlCA,CAAA","sourcesContent":["<template>\r\n  <div id=\"view-page\">\r\n    <ul class=\"collection with-header\">\r\n      <li class=\"collection-item\">First Name: {{firstName}}</li>\r\n      <li class=\"collection-item\">Last Name: {{lastName}}</li>\r\n      <li class=\"collection-item\">E-mail: {{path}}</li>\r\n      <li class=\"collection-item\">City: {{city}}</li>\r\n      <li class=\"collection-item\">Age: {{age}}</li>\r\n      <li class=\"collection-item\">Telephone: {{telephone}}</li>\r\n      <li class=\"collection-item\">Blood Type: {{bloodType}}</li>\r\n      <li class=\"collection-item\">Blood Factor: {{bloodFactor}}</li>\r\n    </ul>\r\n    <router-link to=\"/driver/donors-list\" class=\"btn grey\">Back</router-link>    \r\n    <router-link v-bind:to=\"{ name: 'edit-user', params: { user_id: user_id }}\" class=\"btn red\">        \r\n        Edit\r\n    </router-link>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  export default {\r\n    name: 'view-page',\r\n    data () {\r\n      return {\r\n         email: null,\r\n         firstName:null,\r\n         lastName:null,\r\n         city:null,\r\n         bloodType:null,\r\n         bloodFactor:null,\r\n         age:null,\r\n         telephone:null,\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('users').where('user_id', '==', to.params.user_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.user_id = doc.data().user_id;\r\n            vm.firstName = doc.data().firstName,\r\n            vm.lastName = doc.data().lastName,\r\n            vm.user_email = doc.data().user_email,\r\n            vm.city = doc.data().city,\r\n            vm.age = doc.data().age,\r\n            vm.telephone = doc.data().telephone,\r\n            vm.bloodType = doc.data().bloodType,\r\n            vm.bloodFactor = doc.data().bloodFactor\r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        \r\n        db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then((querySnapshot) => {\r\n            \r\n          querySnapshot.forEach((doc) => {\r\n            this.user_id = doc.data().user_id;\r\n            this.firstName = doc.data().firstName,\r\n            this.lastName = doc.data().lastName,\r\n            this.user_email = doc.data().user_email,\r\n            this.city = doc.data().city,\r\n            this.age = doc.data().age,\r\n            this.telephone = doc.data().telephone,\r\n            this.bloodType = doc.data().bloodType,\r\n            this.bloodFactor = doc.data().bloodFactor\r\n          })\r\n        })\r\n      },\r\n      \r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/doctor"}]}