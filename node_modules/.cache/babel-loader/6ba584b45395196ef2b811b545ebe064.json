{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ChangeUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ChangeUser.vue","mtime":1617133012287},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\Projects\\\\Vue\\\\NEW\\\\vue-spas-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"firebase\";\nexport default {\n  data: function data() {\n    return {\n      users: [],\n      user: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var self = this;\n    firebase.auth().onAuthStateChanged(function (user) {\n      self.user = user;\n    });\n    this.users = [];\n    firebase.firestore().collection(\"roles\").get().then(function (snap) {\n      snap.forEach(function (doc) {\n        var user = doc.data();\n        user.id = doc.id;\n        console.log(doc.data());\n        if (!user.role.donor) _this.users.push(user); //if (!user.role.customer) this.users.push(user);\n        //if (!user.role.admin) this.users.push(user);\n      });\n    });\n  },\n  //add watcher on updated\n  methods: {\n    changeRole: function changeRole(uid, event) {\n      var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\n      var data = {\n        uid: uid,\n        role: _defineProperty({}, event.target.value, true)\n      };\n      console.log(data);\n      addMessage(data).then(function (result) {\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["ChangeUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,QAAA,MAAA,UAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAQA,EAAA,OARA,qBAQA;AAAA;;AAEA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,QAAA,CAAA,IAAA,GAAA,kBAAA,CAAA,UAAA,IAAA,EAAA;AACA,MAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,KAFA;AAIA,SAAA,KAAA,GAAA,EAAA;AACA,IAAA,QAAA,CACA,SADA,GAEA,UAFA,CAEA,OAFA,EAGA,GAHA,GAIA,IAJA,CAIA,UAAA,IAAA,EAAA;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,EAAA;AACA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAJA,CAKA;AACA;AACA,OAPA;AAQA,KAbA;AAgBA,GAhCA;AAiCA;AACA,EAAA,OAAA,EAAA;AAEA,IAAA,UAFA,sBAEA,GAFA,EAEA,KAFA,EAEA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,SAAA,GAAA,aAAA,CAAA,aAAA,CAAA;AAEA,UAAA,IAAA,GAAA;AAAA,QAAA,GAAA,EAAA,GAAA;AAAA,QAAA,IAAA,sBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,IAAA;AAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,MAAA,UAAA,CAAA,IAAA,CAAA,CACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OANA;AAOA;AAdA;AAlCA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n           \r\n\r\n                <h2>List of special users</h2>\r\n                <table class=\"ui celled table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>Role</th>                           \r\n                            <th>Edit</th>                            \r\n                            <th>Enable/disable</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"user in users\" :key=\"user.id\">\r\n                            <td data-label=\"Name\">{{user.email}} </td>\r\n                            <select @change=\"changeRole(user.id, $event)\">\r\n                                <option :selected=\"user.role.driver\" value=\"driver\">Doctor</option>\r\n                                <option :selected=\"user.role.admin\" value=\"admin\">Admin</option>                            \r\n                            </select>\r\n                            <td><button>edit</button></td>                           \r\n                            <td><button>disable</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,            \r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        \r\n    }\r\n};\r\n</script>"],"sourceRoot":"src/views/admin"}]}