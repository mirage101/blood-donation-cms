{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditPage.vue","mtime":1617180732998},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nimport { VueEditor } from \"vue2-editor\";\nexport default {\n  name: 'edit-page',\n  components: {\n    VueEditor: VueEditor\n  },\n  data: function data() {\n    return {\n      page_id: null,\n      name: null,\n      //content: \"<h1>Some initial content</h1>\",\n      path: null,\n      order: null,\n      access: null\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    db.collection('pages').where('page_id', '==', to.params.page_id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        next(function (vm) {\n          vm.page_id = doc.data().page_id;\n          vm.name = doc.data().name;\n          vm.content = doc.data().content;\n          vm.path = doc.data().path;\n          vm.order = doc.data().order;\n          vm.access = doc.data().access;\n        });\n      });\n    });\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.page_id = doc.data().page_id;\n          _this.name = doc.data().name;\n          _this.content = doc.data().content;\n          _this.path = doc.data().path;\n          _this.order = doc.data().order;\n          _this.access = doc.data().access;\n        });\n      });\n    },\n    updatePage: function updatePage() {\n      var _this2 = this;\n\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          doc.ref.update({\n            page_id: _this2.page_id,\n            name: _this2.name,\n            content: _this2.content,\n            path: _this2.path,\n            order: _this2.order,\n            access: _this2.access\n          }).then(function () {\n            _this2.$router.push({\n              name: 'view-page',\n              params: {\n                page_id: _this2.page_id\n              }\n            });\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["EditPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,EAAA;AACA,SAAA,SAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA;AACA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,IALA;AAMA,MAAA,MAAA,EAAA;AANA,KAAA;AAQA,GAdA;AAeA,EAAA,gBAfA,4BAeA,EAfA,EAeA,IAfA,EAeA,IAfA,EAeA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,UAAA,EAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,EAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAAA;AACA,UAAA,EAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,EAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAAA;AACA,UAAA,EAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,GAAA,KAAA;AACA,UAAA,EAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,GAAA,MAAA;AACA,SAPA,CAAA;AAQA,OATA;AAUA,KAXA;AAYA,GA5BA;AA6BA,EAAA,KAAA,EAAA;AACA,cAAA;AADA,GA7BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,QAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,GAAA,KAAA;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,GAAA,MAAA;AACA,SAPA;AAQA,OATA;AAUA,KAZA;AAaA,IAAA,UAbA,wBAaA;AAAA;;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,QAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA;AACA,YAAA,OAAA,EAAA,MAAA,CAAA,OADA;AAEA,YAAA,IAAA,EAAA,MAAA,CAAA,IAFA;AAGA,YAAA,OAAA,EAAA,MAAA,CAAA,OAHA;AAIA,YAAA,IAAA,EAAA,MAAA,CAAA,IAJA;AAKA,YAAA,KAAA,EAAA,MAAA,CAAA,KALA;AAMA,YAAA,MAAA,EAAA,MAAA,CAAA;AANA,WAAA,EAQA,IARA,CAQA,YAAA;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,cAAA,IAAA,EAAA,WAAA;AAAA,cAAA,MAAA,EAAA;AAAA,gBAAA,OAAA,EAAA,MAAA,CAAA;AAAA;AAAA,aAAA;AACA,WAVA;AAWA,SAZA;AAaA,OAdA;AAeA;AA7BA;AAhCA,CAAA","sourcesContent":["<template>\r\n  <div id=\"new-page\">\r\n    <h3>Edit Page</h3>\r\n    <div class=\"row\">\r\n    <form @submit.prevent=\"updatePage\" class=\"col s12\">\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Id</label>\r\n         <input type=\"text\" v-model=\"page_id\" required>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Name</label>\r\n         <input type=\"text\" v-model=\"name\" required>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Page content</label>\r\n          <vue-editor v-model=\"content\" />    \r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <input type=\"text\" v-model=\"path\" required>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Access</label>\r\n        <input type=\"text\" v-model=\"access\" required>        \r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Order</label>\r\n        <input type=\"text\" v-model=\"order\" required>        \r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn\">Submit</button>\r\n      <router-link to=\"/\" class=\"btn grey\">Cancel</router-link>\r\n     \r\n    </form>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  import { VueEditor } from \"vue2-editor\";\r\n\r\n  export default {\r\n    name: 'edit-page',\r\n    components: {\r\n      VueEditor\r\n    },\r\n    data () {\r\n      return {\r\n        page_id: null,\r\n        name: null,\r\n        //content: \"<h1>Some initial content</h1>\",\r\n        path: null,\r\n        order: null,\r\n        access: null\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('pages').where('page_id', '==', to.params.page_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.page_id = doc.data().page_id;\r\n            vm.name = doc.data().name;\r\n            vm.content = doc.data().content;\r\n            vm.path = doc.data().path;\r\n            vm.order = doc.data().order;\r\n            vm.access= doc.data().access;\r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n             this.page_id = doc.data().page_id;\r\n            this.name = doc.data().name;\r\n             this.content = doc.data().content;\r\n             this.path = doc.data().path;\r\n             this.order = doc.data().order;\r\n             this.access= doc.data().access;  \r\n          })\r\n        })\r\n      },\r\n      updatePage () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            doc.ref.update({\r\n              page_id: this.page_id,\r\n              name: this.name,\r\n              content: this.content,\r\n              path: this.path,\r\n              order: this.order,\r\n              access: this.access\r\n            })\r\n            .then(() => {\r\n              this.$router.push({ name: 'view-page', params: { page_id: this.page_id }})\r\n            });\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/doctor"}]}