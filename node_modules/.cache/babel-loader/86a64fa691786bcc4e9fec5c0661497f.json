{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ManageCenters.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ManageCenters.vue","mtime":1617215598848},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nexport default {\n  name: 'centers',\n  data: function data() {\n    return {\n      centers: [],\n      loading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    db.collection('centers').get().then(function (querySnapshot) {\n      _this.loading = false;\n      querySnapshot.forEach(function (doc) {\n        var data = {\n          'id': doc.id,\n          'center_id': doc.data().center_id,\n          'location': doc.data().location,\n          'contacts': doc.data().contacts,\n          'work_time': doc.data().work_time\n        };\n\n        _this.centers.push(data);\n      });\n    });\n  },\n  methods: {\n    deleteCenter: function deleteCenter(center_id) {\n      if (confirm('Are you sure?')) {\n        db.collection('centers').where('center_id', '==', center_id).get().then(function (querySnapshot) {\n          console.log(querySnapshot);\n          querySnapshot.forEach(function (doc) {\n            doc.ref.delete();\n            console.log('center deleted');\n          }, function (e) {\n            console.log(e);\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["ManageCenters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,gBAAA,GAAA,CAAA,EADA;AAEA,uBAAA,GAAA,CAAA,IAAA,GAAA,SAFA;AAGA,sBAAA,GAAA,CAAA,IAAA,GAAA,QAHA;AAIA,sBAAA,GAAA,CAAA,IAAA,GAAA,QAJA;AAKA,uBAAA,GAAA,CAAA,IAAA,GAAA;AALA,SAAA;;AAOA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA;AAEA,OAVA;AAWA,KAbA;AAeA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,SADA,EACA;AAEA,UAAA,OAAA,CAAA,eAAA,CAAA,EAAA;AAEA,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,UAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,WAHA,EAGA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,WALA;AAMA,SARA;AASA;AACA;AAfA;AAzBA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <h2>Centers</h2>  \r\n        <router-link to=\"/driver/create-center\" class=\"btn btn-primary\"><i class=\"fa fa-eye\"></i> Create center</router-link>\r\n         <table class=\"ui celled table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Center location</th>\r\n              <th>contacts</th>\r\n              <th>Work time</th>\r\n              <th>Edit</th>                           \r\n              <th>View</th>                                          \r\n              <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n         <tbody>\r\n              <tr v-for=\"center in centers\" v-bind:key=\"center.id\">\r\n                \r\n                <td data-label=\"Name\">{{center.location}} </td>\r\n                <td data-label=\"Name\">{{center.contacts}} </td>\r\n                <td data-label=\"Name\">{{center.work_time}} </td>\r\n                <td>\r\n                  <router-link :to=\"{ name: 'edit-center', params: { center_id: center.center_id }}\" class=\"btn btn-warning\"><i class=\"fa fa-eye\"></i> edit</router-link>\r\n                  </td>   \r\n                  <td>\r\n                  <router-link :to=\"{ name: 'view-center', params: { center_id: center.center_id }}\" class=\"btn btn-success\"><i class=\"fa fa-eye\"></i> view</router-link>\r\n                  </td>                          \r\n                <td><button @click=\"deleteCenter(center.center_id)\" class=\"btn btn-danger\">Delete</button></td>\r\n                \r\n             </tr>\r\n              \r\n          </tbody>\r\n     </table> \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n import db from '../../db'\r\n  \r\n  export default {\r\n    name: 'centers',\r\n    data () {\r\n      return {\r\n        centers: [],\r\n        loading: true\r\n      }\r\n    },\r\n    created () {\r\n      db.collection('centers').get().then((querySnapshot) => {\r\n        this.loading = false\r\n        querySnapshot.forEach((doc) => {\r\n          const data = {\r\n            'id': doc.id,\r\n            'center_id': doc.data().center_id,\r\n            'location': doc.data().location,\r\n            'contacts': doc.data().contacts,\r\n            'work_time': doc.data().work_time,\r\n          }\r\n          this.centers.push(data)\r\n          \r\n        })\r\n      })\r\n      \r\n    },\r\n    methods:{\r\n       deleteCenter(center_id) {\r\n        \r\n        if(confirm ('Are you sure?')) {\r\n          \r\n          db.collection('centers').where('center_id', '==', center_id).get().then((querySnapshot) => {\r\n            console.log(querySnapshot)\r\n            querySnapshot.forEach((doc) => {              \r\n              doc.ref.delete();\r\n              console.log('center deleted');              \r\n            }, (e) =>{\r\n                console.log(e)  \r\n            });\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/doctor"}]}