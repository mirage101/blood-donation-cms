{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ManageEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ManageEvents.vue","mtime":1617215488790},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nexport default {\n  name: 'events',\n  data: function data() {\n    return {\n      events: [],\n      loading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    db.collection('events').get().then(function (querySnapshot) {\n      _this.loading = false;\n      querySnapshot.forEach(function (doc) {\n        var data = {\n          'id': doc.id,\n          'event_id': doc.data().id,\n          'name': doc.data().name,\n          'descr': doc.data().descr,\n          'start': doc.data().start,\n          'end': doc.data().end,\n          'status': doc.data().status\n        };\n\n        _this.events.push(data);\n\n        console.log(_this.events);\n      });\n    });\n  },\n  methods: {\n    deleteEvent: function deleteEvent(event_id) {\n      console.log(event_id);\n\n      if (confirm('Are you sure?')) {\n        db.collection('events').where('id', '==', event_id).get().then(function (querySnapshot) {\n          console.log(querySnapshot);\n          querySnapshot.forEach(function (doc) {\n            doc.ref.delete();\n            console.log('event deleted');\n          }, function (e) {\n            console.log(e);\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["ManageEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,gBAAA,GAAA,CAAA,EADA;AAEA,sBAAA,GAAA,CAAA,IAAA,GAAA,EAFA;AAGA,kBAAA,GAAA,CAAA,IAAA,GAAA,IAHA;AAIA,mBAAA,GAAA,CAAA,IAAA,GAAA,KAJA;AAKA,mBAAA,GAAA,CAAA,IAAA,GAAA,KALA;AAMA,iBAAA,GAAA,CAAA,IAAA,GAAA,GANA;AAOA,oBAAA,GAAA,CAAA,IAAA,GAAA;AAPA,SAAA;;AASA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;AACA,OAZA;AAaA,KAfA;AAiBA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,QADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,EAAA;AAEA,QAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,KAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,UAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AAEA,YAAA,GAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AAEA,WALA,EAKA,UAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,WAPA;AAQA,SAVA;AAWA;AACA;AAjBA;AA3BA,CAAA","sourcesContent":["<template>\r\n   <div id=\"home\">\r\n      <h2>Events list</h2>      \r\n     <table class=\"ui celled table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Event Name</th>\r\n              <th>Description</th>\r\n              <th>Start</th>\r\n              <th>End</th>\r\n              <th>Enabled</th>\r\n              <th>Edit</th>                           \r\n              <th>View</th>                                          \r\n              <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n         <tbody>\r\n              <tr v-for=\"event in events\" :key=\"event.id\">\r\n                <td data-label=\"Name\">{{event.name}} </td>\r\n                <td v-html=\"event.descr\"></td>\r\n                <td data-label=\"Name\">{{event.start}} </td>\r\n                <td data-label=\"Name\">{{event.end}} </td>\r\n                <td data-label=\"Name\">{{event.status}} </td>\r\n                <td>\r\n                  <router-link :to=\"{ name: 'edit-event', params: { event_id: event.event_id }}\" class=\"btn btn-warning\"><i class=\"fa fa-eye\"></i> edit</router-link>\r\n                  </td>   \r\n                  <td>\r\n                  <router-link :to=\"{ name: 'view-event', params: { event_id: event.event_id }}\" class=\"btn btn-success\"><i class=\"fa fa-eye\"></i> view</router-link>\r\n                  </td>                          \r\n                <td><button @click=\"deleteEvent(event.event_id)\" class=\"btn btn-danger\">Delete</button></td>\r\n                \r\n             </tr>\r\n              \r\n          </tbody>\r\n     </table> \r\n     \r\n        <router-link :to=\"{path: '/event/create-event'}\"  class=\"btn btn-primary\">\r\n          Create new event\r\n        </router-link>\r\n     \r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import db from '../../db'\r\n  \r\n  export default {\r\n    name: 'events',\r\n    data () {\r\n      return {\r\n        events: [],\r\n        loading: true\r\n      }\r\n    },\r\n    created () {\r\n      db.collection('events').get().then((querySnapshot) => {\r\n        this.loading = false\r\n        querySnapshot.forEach((doc) => {\r\n          const data = {\r\n            'id': doc.id,\r\n            'event_id': doc.data().id,\r\n            'name': doc.data().name,\r\n            'descr': doc.data().descr,\r\n            'start': doc.data().start,\r\n            'end': doc.data().end,\r\n            'status': doc.data().status\r\n          }\r\n          this.events.push(data)\r\n          console.log(this.events)\r\n        })\r\n      })\r\n      \r\n    },\r\n    methods:{\r\n       deleteEvent(event_id) {\r\n        console.log(event_id)\r\n        if(confirm ('Are you sure?')) {\r\n          \r\n          db.collection('events').where('id', '==', event_id).get().then((querySnapshot) => {\r\n            console.log(querySnapshot)\r\n            querySnapshot.forEach((doc) => {\r\n              \r\n              doc.ref.delete();\r\n              console.log('event deleted');\r\n              \r\n            }, (e) =>{\r\n                console.log(e)  \r\n            });\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/doctor"}]}