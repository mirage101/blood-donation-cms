{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditEvent.vue","mtime":1617217456961},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nimport { VueEditor } from \"vue2-editor\";\nexport default {\n  name: 'edit-event',\n  components: {\n    VueEditor: VueEditor\n  },\n  data: function data() {\n    return {\n      name: '',\n      descr: '',\n      status: 'enabled',\n      //expired\n      end: '',\n      start: '',\n      type: '' //emergent, frequient   \n\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    db.collection('events').where('id', '==', to.params.event_id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        next(function (vm) {\n          vm.event_id = doc.data().id;\n          vm.name = doc.data().name;\n          vm.desc = doc.data().descr;\n          vm.start = doc.data().start;\n          vm.end = doc.data().end;\n          vm.status = doc.data().status;\n          vm.type = doc.data().type;\n        });\n      });\n    });\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      db.collection('events').where('event_id', '==', this.$route.params.event_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.event_id = doc.data().event_id;\n          _this.name = doc.data().name;\n          _this.descr = doc.data().descr;\n          _this.start = doc.data().start;\n          _this.end = doc.data().end;\n          _this.status = doc.data().status;\n          _this.type = doc.data().type;\n        });\n      });\n    },\n    updateEvent: function updateEvent() {\n      var _this2 = this;\n\n      db.collection('events').where('id', '==', this.$route.params.event_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          doc.ref.update({\n            event_id: _this2.event_id,\n            name: _this2.name,\n            descr: _this2.descr,\n            start: _this2.start,\n            end: _this2.end,\n            status: _this2.status,\n            type: _this2.type\n          }).then(function () {\n            //this.$router.push({ name: 'view-event', params: { event_id: this.event_id }})\n            _this2.$router.push('/driver/manage-events');\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["EditEvent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"new-page\">\r\n    <h3>Edit Event {{name}}</h3>\r\n    <div class=\"row\">\r\n    <form @submit.prevent=\"updateEvent\" class=\"col s12\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"name\" required>\r\n          <label>Name</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <vue-editor v-model=\"descr\" />          \r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"date\" v-model=\"start\" required>\r\n          <label>Start</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"date\" v-model=\"end\" required>\r\n          <label>End</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <select v-model=\"status\">\r\n            <option value=\"enable\">enable</option>\r\n            <option value=\"disable\">disable</option>\r\n          </select>\r\n          <label>Status</label>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-success\" @click=\"updateEvent\">Update Event</button>\r\n      <router-link to=\"/driver/manage-events\" class=\"btn btn-secondary\">Cancel</router-link>\r\n    </form>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  import { VueEditor } from \"vue2-editor\";\r\n\r\n  export default {\r\n    name: 'edit-event',\r\n    components:{\r\n    VueEditor\r\n    },\r\n    data () {\r\n      return {\r\n        name:'',\r\n        descr:'',\r\n        status:'enabled', //expired\r\n        end:'',\r\n        start:'',\r\n        type:'' //emergent, frequient   \r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('events').where('id', '==', to.params.event_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.event_id = doc.data().id;\r\n            vm.name = doc.data().name;\r\n            vm.desc = doc.data().descr;\r\n            vm.start = doc.data().start;\r\n            vm.end = doc.data().end;\r\n            vm.status= doc.data().status;\r\n            vm.type= doc.data().type;\r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('events').where('event_id', '==', this.$route.params.event_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            this.event_id = doc.data().event_id;\r\n            this.name = doc.data().name;\r\n            this.descr = doc.data().descr;\r\n            this.start = doc.data().start;\r\n            this.end = doc.data().end;\r\n            this.status= doc.data().status;\r\n            this.type= doc.data().type;            \r\n          })\r\n        })\r\n      },\r\n      updateEvent () {\r\n        db.collection('events').where('id', '==', this.$route.params.event_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            doc.ref.update({\r\n              event_id: this.event_id,\r\n              name: this.name,\r\n              descr: this.descr,\r\n              start: this.start,\r\n              end: this.end,\r\n              status: this.status,\r\n              type: this.type,              \r\n            })\r\n            .then(() => {\r\n              //this.$router.push({ name: 'view-event', params: { event_id: this.event_id }})\r\n              this.$router.push('/driver/manage-events')\r\n            });\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/doctor"}]}