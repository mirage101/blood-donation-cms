{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Admin.vue","mtime":1617127483469},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\Vue\\\\NEW\\\\vue-spas-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\Projects\\\\Vue\\\\NEW\\\\vue-spas-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"firebase\";\nexport default {\n  data: function data() {\n    return {\n      users: [],\n      user: null,\n      email: '',\n      crEmail: '',\n      crPassword: \"\",\n      isAdmin: false,\n      crRole: ''\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var self = this;\n    firebase.auth().onAuthStateChanged(function (user) {\n      self.user = user;\n    });\n    this.users = [];\n    firebase.firestore().collection(\"roles\").get().then(function (snap) {\n      snap.forEach(function (doc) {\n        var user = doc.data();\n        user.id = doc.id;\n        console.log(doc.data());\n        if (!user.role.donor) _this.users.push(user); //if (!user.role.customer) this.users.push(user);\n        //if (!user.role.admin) this.users.push(user);\n      });\n    });\n  },\n  //add watcher on updated\n  methods: {\n    signout: function signout() {\n      var _this2 = this;\n\n      firebase.auth().signOut().then(function (user) {\n        _this2.isAdmin = false;\n\n        _this2.$router.push(\"/\");\n      });\n    },\n    changeRole: function changeRole(uid, event) {\n      var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\n      var data = {\n        uid: uid,\n        role: _defineProperty({}, event.target.value, true)\n      };\n      console.log(data);\n      addMessage(data).then(function (result) {\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    createUser: function () {\n      var _createUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var uid, _ref, user;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uid = 1;\n                _context.prev = 1;\n                _context.next = 4;\n                return firebase.auth().createUserWithEmailAndPassword(this.crEmail, this.crPassword).then(function success(userData) {\n                  var uid = userData.uid; //     var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\n                  //     var data = { uid: uid, role: { admin: true } };\n                  //      addMessage(data)\n                  // .then(function(result) {\n                  //     console.log(result);\n                  // })\n                  // .catch(function(error) {\n                  //     console.log(error)\n                  // });\n                }).catch(function failure(error) {\n                  var errorCode = error.code;\n                  var errorMessage = error.message;\n                  console.log(errorCode + \" \" + errorMessage);\n                });\n\n              case 4:\n                _ref = _context.sent;\n                user = _ref.user;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      function createUser() {\n        return _createUser.apply(this, arguments);\n      }\n\n      return createUser;\n    }(),\n    deleteUser: function deleteUser(uid) {\n      console.log(firebase.functions().removeUser()); // var deleteUserData = firebase.functions()(\"removeUser\");\n      // var data = { uid: uid};\n      // console.log(data)\n      // deleteUserData(data)\n      //     .then(function(result) {\n      //         console.log(result);\n      //     })\n      //     .catch(function(error) {\n      //         console.log(error)\n      //     });\n    }\n  }\n};",{"version":3,"sources":["Admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <section>\r\n        <div class=\"ui middle aligned center aligned grid\">\r\n            <div class=\"column\">\r\n                <h1>Admin Area</h1>\r\n                <router-view></router-view>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,\r\n            email:'',\r\n            crEmail:'',\r\n            crPassword: \"\",\r\n            isAdmin:false,\r\n            crRole:''\r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        signout() {\r\n            firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(user => {\r\n                    this.isAdmin = false;\r\n                    this.$router.push(\"/\");\r\n                });\r\n        },\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        async createUser(){    \r\n            var uid = 1;        \r\n            try {\r\n            var {\r\n                user\r\n            } = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.crEmail, this.crPassword)\r\n                .then(function success(userData){\r\n                    var uid = userData.uid;\r\n                //     var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n                //     var data = { uid: uid, role: { admin: true } };\r\n                //      addMessage(data)\r\n                // .then(function(result) {\r\n                //     console.log(result);\r\n                // })\r\n                // .catch(function(error) {\r\n                //     console.log(error)\r\n                // });\r\n          \r\n                }).catch(function failure(error) {\r\n\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          console.log(errorCode + \" \" + errorMessage);\r\n\r\n            });\r\n                \r\n               \r\n            } catch (error) {\r\n            console.log(error.message);\r\n            }\r\n\r\n        },\r\n     \r\n         deleteUser(uid) {\r\n             console.log(firebase.functions().removeUser())\r\n            // var deleteUserData = firebase.functions()(\"removeUser\");\r\n\r\n            // var data = { uid: uid};\r\n            // console.log(data)\r\n            // deleteUserData(data)\r\n            //     .then(function(result) {\r\n            //         console.log(result);\r\n            //     })\r\n            //     .catch(function(error) {\r\n            //         console.log(error)\r\n            //     });\r\n        },\r\n    }\r\n};\r\n</script>"],"sourceRoot":"src/views"}]}