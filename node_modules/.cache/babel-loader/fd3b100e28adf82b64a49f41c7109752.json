{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ManagePages.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ManagePages.vue","mtime":1617216300815},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nexport default {\n  name: 'home',\n  data: function data() {\n    return {\n      pages: [],\n      loading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    db.collection('pages').orderBy('order').get().then(function (querySnapshot) {\n      _this.loading = false;\n      querySnapshot.forEach(function (doc) {\n        var data = {\n          'id': doc.id,\n          'page_id': doc.data().page_id,\n          'name': doc.data().name,\n          'content': doc.data().content,\n          'path': doc.data().path,\n          'order': doc.data().order,\n          'access': doc.data().access\n        };\n\n        _this.pages.push(data);\n      });\n    });\n  },\n  methods: {\n    deletepage: function deletepage(page_id) {\n      if (confirm('Are you sure?')) {\n        db.collection('pages').where('page_id', '==', page_id).get().then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            doc.ref.delete();\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["ManagePages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,OAAA,CAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,MAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,gBAAA,GAAA,CAAA,EADA;AAEA,qBAAA,GAAA,CAAA,IAAA,GAAA,OAFA;AAGA,kBAAA,GAAA,CAAA,IAAA,GAAA,IAHA;AAIA,qBAAA,GAAA,CAAA,IAAA,GAAA,OAJA;AAKA,kBAAA,GAAA,CAAA,IAAA,GAAA,IALA;AAMA,mBAAA,GAAA,CAAA,IAAA,GAAA,KANA;AAOA,oBAAA,GAAA,CAAA,IAAA,GAAA;AAPA,SAAA;;AASA,QAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAXA;AAYA,KAdA;AAgBA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,OADA,EACA;AAGA,UAAA,OAAA,CAAA,eAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,GAAA,IAAA,CAAA,UAAA,aAAA,EAAA;AACA,UAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,GAAA,CAAA,MAAA;AAEA,WAHA;AAIA,SALA;AAMA;AACA;AAZA;AA1BA,CAAA","sourcesContent":["<template>\r\n   <div id=\"home\">\r\n      \r\n     <table class=\"ui celled table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Page name</th>\r\n              <th>Edit</th>                           \r\n              <th>View</th>                                          \r\n              <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n         <tbody>\r\n              <tr v-for=\"page in pages\" v-bind:key=\"page.id\">\r\n                <td data-label=\"Name\">{{page.name}} </td>\r\n                <td>\r\n                  <router-link :to=\"{ name: 'edit-page', params: { page_id: page.page_id }}\" class=\"btn btn-warning\">edit</router-link>\r\n                  </td>   \r\n                  <td>\r\n                  <router-link :to=\"{ name: 'view-page', params: { page_id: page.page_id }}\" class=\"btn btn-success\">view</router-link>\r\n                  </td>                          \r\n                <td><button @click=\"deletepage(page.page_id)\" class=\"btn btn-danger\">Delete</button></td>\r\n                \r\n             </tr>\r\n              \r\n          </tbody>\r\n     </table> \r\n    <router-link :to=\"{path: '/admin/new-page'}\" class=\"btn btn-primary\">\r\n          Create new page\r\n        </router-link>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import db from '../../db'\r\n  \r\n  export default {\r\n    name: 'home',\r\n    data () {\r\n      return {\r\n        pages: [],\r\n        loading: true\r\n      }\r\n    },\r\n    created () {\r\n      db.collection('pages').orderBy('order').get().then((querySnapshot) => {\r\n        this.loading = false\r\n        querySnapshot.forEach((doc) => {\r\n          const data = {\r\n            'id': doc.id,\r\n            'page_id': doc.data().page_id,\r\n            'name': doc.data().name,\r\n            'content': doc.data().content,\r\n            'path': doc.data().path,\r\n            'order': doc.data().order,\r\n            'access': doc.data().access\r\n          }\r\n          this.pages.push(data)\r\n        })\r\n      })\r\n      \r\n    },\r\n    methods:{\r\n       deletepage (page_id) {\r\n         \r\n         \r\n        if(confirm ('Are you sure?')) {\r\n          db.collection('pages').where('page_id', '==', page_id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              doc.ref.delete();\r\n              \r\n            })\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/views/admin"}]}