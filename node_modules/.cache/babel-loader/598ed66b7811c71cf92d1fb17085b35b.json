{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditUser.vue","mtime":1617217292793},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport db from \"../../db\";\nexport default {\n  name: 'edit-user',\n  data: function data() {\n    return {\n      email: null,\n      password: null,\n      //confirmPassword: null,\n      firstName: null,\n      lastName: null,\n      city: null,\n      bloodType: null,\n      bloodFactor: null,\n      age: null,\n      telephone: null\n    };\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    db.collection('users').where('user_id', '==', to.params.user_id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        next(function (vm) {\n          vm.user_id = doc.data().user_id;\n          vm.firstName = doc.data().firstName, vm.lastName = doc.data().lastName, vm.user_email = doc.data().user_email, vm.city = doc.data().city, vm.age = doc.data().age, vm.telephone = doc.data().telephone, vm.bloodType = doc.data().bloodType, vm.bloodFactor = doc.data().bloodFactor;\n        });\n      });\n    });\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this.user_id = doc.data().user_id;\n          _this.firstName = doc.data().firstName, _this.lastName = doc.data().lastName, _this.user_email = doc.data().user_email, _this.city = doc.data().city, _this.age = doc.data().age, _this.telephone = doc.data().telephone, _this.bloodType = doc.data().bloodType, _this.bloodFactor = doc.data().bloodFactor;\n        });\n      });\n    },\n    updateUser: function updateUser() {\n      var _this2 = this;\n\n      db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          doc.ref.update({\n            page_id: _this2.page_id,\n            // user_id: userCredentials.user.uid,\n            user_email: _this2.email,\n            firstName: _this2.firstName,\n            lastName: _this2.lastName,\n            city: _this2.city,\n            bloodType: _this2.bloodType,\n            bloodFactor: _this2.bloodFactor,\n            age: _this2.age,\n            telephone: _this2.telephone\n          }).then(function () {\n            _this2.$router.push({\n              name: 'view-user',\n              params: {\n                user_id: _this2.user_id\n              }\n            });\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["EditUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"new-page\">\r\n    <h3>Edit User</h3>\r\n    <div class=\"row\">\r\n    <form @submit.prevent=\"updateUser\" class=\"col s12\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"firstName\">First name:</label> \r\n          <input type=\"text\" v-model=\"firstName\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"lastName\">Last name:</label> \r\n          <input type=\"text\" v-model=\"lastName\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"city\">City:</label>\r\n          <input type=\"text\" v-model=\"city\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"bloodType\">BloodType:</label>\r\n          <input type=\"text\" v-model=\"bloodType\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"bloodFactor\">Blood Factor:</label>\r\n          <input type=\"text\" v-model=\"bloodFactor\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field\">\r\n          <label for=\"age\">Age:</label>\r\n          <input type=\"text\" v-model=\"age\" required>\r\n        </div>\r\n      </div>\r\n       <div class=\"row\">\r\n        <div class=\"input-field\">\r\n           <label for=\"telephone\">Telephone: </label>\r\n          <input type=\"text\" v-model=\"telephone\" required>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n      <router-link to=\"/driver/donors-list\" class=\"btn btn-warning\">Cancel</router-link>\r\n    </form>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n    export default {\r\n    name: 'edit-user',\r\n    data () {\r\n      return {\r\n         email: null,\r\n         password: null,\r\n         //confirmPassword: null,\r\n         firstName:null,\r\n         lastName:null,\r\n         city:null,\r\n         bloodType:null,\r\n         bloodFactor:null,\r\n         age:null,\r\n         telephone:null,\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('users').where('user_id', '==', to.params.user_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.user_id = doc.data().user_id;\r\n            vm.firstName = doc.data().firstName,\r\n            vm.lastName = doc.data().lastName,\r\n            vm.user_email = doc.data().user_email,\r\n            vm.city = doc.data().city,\r\n            vm.age = doc.data().age,\r\n            vm.telephone = doc.data().telephone,\r\n            vm.bloodType = doc.data().bloodType,\r\n            vm.bloodFactor = doc.data().bloodFactor\r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        \r\n        db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then((querySnapshot) => {\r\n            \r\n          querySnapshot.forEach((doc) => {\r\n            this.user_id = doc.data().user_id;\r\n            this.firstName = doc.data().firstName,\r\n            this.lastName = doc.data().lastName,\r\n            this.user_email = doc.data().user_email,\r\n            this.city = doc.data().city,\r\n            this.age = doc.data().age,\r\n            this.telephone = doc.data().telephone,\r\n            this.bloodType = doc.data().bloodType,\r\n            this.bloodFactor = doc.data().bloodFactor\r\n          })\r\n        })\r\n      },\r\n      updateUser () {\r\n        db.collection('users').where('user_id', '==', this.$route.params.user_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            doc.ref.update({\r\n              page_id: this.page_id,\r\n              // user_id: userCredentials.user.uid,\r\n               user_email:this.email,\r\n               firstName: this.firstName,\r\n               lastName: this.lastName,\r\n               city: this.city,\r\n               bloodType: this.bloodType,\r\n               bloodFactor: this.bloodFactor,\r\n               age: this.age,            \r\n               telephone: this.telephone,\r\n            })\r\n            .then(() => {\r\n              this.$router.push({ name: 'view-user', params: { user_id: this.user_id }})\r\n            });\r\n          })\r\n        })\r\n      }\r\n    },\r\n\r\n  }\r\n</script>"],"sourceRoot":"src/views/doctor"}]}