{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewPage.vue","mtime":1617217744918},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport db from '../../db'\nexport default {\n  name: 'view-page',\n  data () {\n    return {\n      page_id: null,\n      name: null,\n      content: null,\n      path: null,\n      order: null,\n      access: null\n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    db.collection('pages').where('page_id', '==', to.params.page_id).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        next(vm => {\n          vm.page_id = doc.data().page_id;\n          vm.name = doc.data().name;\n          vm.content = doc.data().content;\n          vm.path = doc.data().path;\n          vm.order = doc.data().order;\n          vm.access= doc.data().access;\n          \n        })\n      })\n    })\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData () {\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.page_id = doc.data().page_id;\n          this.name = doc.data().name;\n           this.content = doc.data().content;\n           this.path = doc.data().path;\n           this.order = doc.data().order;\n           this.access= doc.data().access            \n        })\n      })\n    },\n    deletepage () {\n      if(confirm ('Are you sure?')) {\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            doc.ref.delete();\n            this.$router.push('/')\n          })\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["ViewPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewPage.vue","sourceRoot":"src/views/doctor","sourcesContent":["<template>\r\n  <div id=\"view-page\">\r\n    <div class=\"collection with-header\">\r\n      <div class=\"collection-header\"><h4>{{name}}</h4></div>\r\n      <div class=\"collection-item\">Content: <div v-html=\"content\"></div></div>\r\n    </div>\r\n    <router-link to=\"/\" class=\"btn btn-secondary\">Back</router-link>\r\n    <button @click=\"deletepage\" class=\"btn btn-danger\">Delete</button>\r\n    <router-link v-bind:to=\"{ name: 'edit-page', params: { page_id: page_id }}\" class=\"btn btn-warning\">\r\n        \r\n        Edit\r\n      </router-link>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  export default {\r\n    name: 'view-page',\r\n    data () {\r\n      return {\r\n        page_id: null,\r\n        name: null,\r\n        content: null,\r\n        path: null,\r\n        order: null,\r\n        access: null\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('pages').where('page_id', '==', to.params.page_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.page_id = doc.data().page_id;\r\n            vm.name = doc.data().name;\r\n            vm.content = doc.data().content;\r\n            vm.path = doc.data().path;\r\n            vm.order = doc.data().order;\r\n            vm.access= doc.data().access;\r\n            \r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            this.page_id = doc.data().page_id;\r\n            this.name = doc.data().name;\r\n             this.content = doc.data().content;\r\n             this.path = doc.data().path;\r\n             this.order = doc.data().order;\r\n             this.access= doc.data().access            \r\n          })\r\n        })\r\n      },\r\n      deletepage () {\r\n        if(confirm ('Are you sure?')) {\r\n          db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              doc.ref.delete();\r\n              this.$router.push('/')\r\n            })\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}