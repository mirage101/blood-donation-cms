{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Admin.vue","mtime":1617121952967},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,\r\n            email:'',\r\n            crEmail:'',\r\n            crPassword: \"\",\r\n            isAdmin:false,\r\n            crRole:''\r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        signout() {\r\n            firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(user => {\r\n                    this.isAdmin = false;\r\n                    this.$router.push(\"/\");\r\n                });\r\n        },\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        async createUser(){    \r\n            var uid = 1;        \r\n            try {\r\n            var {\r\n                user\r\n            } = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.crEmail, this.crPassword)\r\n                .then(function success(userData){\r\n                    var uid = userData.uid;\r\n                //     var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n                //     var data = { uid: uid, role: { admin: true } };\r\n                //      addMessage(data)\r\n                // .then(function(result) {\r\n                //     console.log(result);\r\n                // })\r\n                // .catch(function(error) {\r\n                //     console.log(error)\r\n                // });\r\n          \r\n                }).catch(function failure(error) {\r\n\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          console.log(errorCode + \" \" + errorMessage);\r\n\r\n            });\r\n                \r\n               \r\n            } catch (error) {\r\n            console.log(error.message);\r\n            }\r\n\r\n        },\r\n     \r\n         deleteUser(uid) {\r\n             console.log(firebase.functions().removeUser())\r\n            // var deleteUserData = firebase.functions()(\"removeUser\");\r\n\r\n            // var data = { uid: uid};\r\n            // console.log(data)\r\n            // deleteUserData(data)\r\n            //     .then(function(result) {\r\n            //         console.log(result);\r\n            //     })\r\n            //     .catch(function(error) {\r\n            //         console.log(error)\r\n            //     });\r\n        },\r\n    }\r\n};\r\n",{"version":3,"sources":["Admin.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Admin.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <section>\r\n        <div class=\"ui middle aligned center aligned grid\">\r\n            <div class=\"column\">\r\n                <h1>Admin Area</h1>\r\n                <p>User:{{user.email}}</p>\r\n                <button class=\"ui pink submit button\" @click=\"signout\">Signout</button>                \r\n                <router-view></router-view>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n<script>\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,\r\n            email:'',\r\n            crEmail:'',\r\n            crPassword: \"\",\r\n            isAdmin:false,\r\n            crRole:''\r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        signout() {\r\n            firebase\r\n                .auth()\r\n                .signOut()\r\n                .then(user => {\r\n                    this.isAdmin = false;\r\n                    this.$router.push(\"/\");\r\n                });\r\n        },\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        async createUser(){    \r\n            var uid = 1;        \r\n            try {\r\n            var {\r\n                user\r\n            } = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.crEmail, this.crPassword)\r\n                .then(function success(userData){\r\n                    var uid = userData.uid;\r\n                //     var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n                //     var data = { uid: uid, role: { admin: true } };\r\n                //      addMessage(data)\r\n                // .then(function(result) {\r\n                //     console.log(result);\r\n                // })\r\n                // .catch(function(error) {\r\n                //     console.log(error)\r\n                // });\r\n          \r\n                }).catch(function failure(error) {\r\n\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          console.log(errorCode + \" \" + errorMessage);\r\n\r\n            });\r\n                \r\n               \r\n            } catch (error) {\r\n            console.log(error.message);\r\n            }\r\n\r\n        },\r\n     \r\n         deleteUser(uid) {\r\n             console.log(firebase.functions().removeUser())\r\n            // var deleteUserData = firebase.functions()(\"removeUser\");\r\n\r\n            // var data = { uid: uid};\r\n            // console.log(data)\r\n            // deleteUserData(data)\r\n            //     .then(function(result) {\r\n            //         console.log(result);\r\n            //     })\r\n            //     .catch(function(error) {\r\n            //         console.log(error)\r\n            //     });\r\n        },\r\n    }\r\n};\r\n</script>"]}]}