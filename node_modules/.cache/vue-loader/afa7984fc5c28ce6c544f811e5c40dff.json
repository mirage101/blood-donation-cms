{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ManagePages.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ManagePages.vue","mtime":1617122041919},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport db from '../../db'\n \n export default {\n   name: 'home',\n   data () {\n     return {\n       pages: [],\n       loading: true\n     }\n   },\n   created () {\n     db.collection('pages').orderBy('order').get().then((querySnapshot) => {\n       this.loading = false\n       querySnapshot.forEach((doc) => {\n         const data = {\n           'id': doc.id,\n           'page_id': doc.data().page_id,\n           'name': doc.data().name,\n           'content': doc.data().content,\n           'path': doc.data().path,\n           'order': doc.data().order,\n           'access': doc.data().access\n         }\n         this.pages.push(data)\n       })\n     })\n     \n   },\n   methods:{\n      deletepage (page_id) {\n        \n        \n       if(confirm ('Are you sure?')) {\n         db.collection('pages').where('page_id', '==', page_id).get().then((querySnapshot) => {\n           querySnapshot.forEach((doc) => {\n             doc.ref.delete();\n             \n           })\n         })\n       }\n     }\n   }\n }\n",{"version":3,"sources":["ManagePages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ManagePages.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n   <div id=\"home\">\r\n      \r\n     <table class=\"ui celled table\">\r\n        <thead>\r\n          <tr>\r\n              <th>Page name</th>\r\n              <th>Edit</th>                           \r\n              <th>View</th>                                          \r\n              <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n         <tbody>\r\n              <tr v-for=\"page in pages\" v-bind:key=\"page.id\">\r\n                <td data-label=\"Name\">{{page.name}} </td>\r\n                <td>\r\n                  <router-link :to=\"{ name: 'edit-page', params: { page_id: page.page_id }}\"><i class=\"fa fa-eye\"></i> edit</router-link>\r\n                  </td>   \r\n                  <td>\r\n                  <router-link :to=\"{ name: 'view-page', params: { page_id: page.page_id }}\"><i class=\"fa fa-eye\"></i> view</router-link>\r\n                  </td>                          \r\n                <td><button @click=\"deletepage(page.page_id)\" class=\"btn red\">Delete</button></td>\r\n                \r\n             </tr>\r\n              \r\n          </tbody>\r\n     </table> \r\n     <button>\r\n        <router-link :to=\"{path: '/admin/new-page'}\">\r\n          Create new page\r\n        </router-link>\r\n     </button>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n import db from '../../db'\r\n  \r\n  export default {\r\n    name: 'home',\r\n    data () {\r\n      return {\r\n        pages: [],\r\n        loading: true\r\n      }\r\n    },\r\n    created () {\r\n      db.collection('pages').orderBy('order').get().then((querySnapshot) => {\r\n        this.loading = false\r\n        querySnapshot.forEach((doc) => {\r\n          const data = {\r\n            'id': doc.id,\r\n            'page_id': doc.data().page_id,\r\n            'name': doc.data().name,\r\n            'content': doc.data().content,\r\n            'path': doc.data().path,\r\n            'order': doc.data().order,\r\n            'access': doc.data().access\r\n          }\r\n          this.pages.push(data)\r\n        })\r\n      })\r\n      \r\n    },\r\n    methods:{\r\n       deletepage (page_id) {\r\n         \r\n         \r\n        if(confirm ('Are you sure?')) {\r\n          db.collection('pages').where('page_id', '==', page_id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              doc.ref.delete();\r\n              \r\n            })\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}