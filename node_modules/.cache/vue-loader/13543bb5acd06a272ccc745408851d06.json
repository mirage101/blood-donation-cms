{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Attendees.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Attendees.vue","mtime":1564924742000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport db from \"../db.js\";\n\nexport default {\n  name: \"Attendees\",\n  data: function() {\n    return {\n      attendees: [],\n      displayAttendees: [],\n      searchQuery: \"\",\n      userID: this.$route.params.userID,\n      meetingID: this.$route.params.meetingID\n    };\n  },\n  components: {\n    FontAwesomeIcon\n  },\n  computed: {\n    filteredAttendees: function() {\n      const dataFilter = item =>\n        item.displayName.toLowerCase().match(this.searchQuery.toLowerCase()) &&\n        true;\n      return this.displayAttendees.filter(dataFilter);\n    }\n  },\n  methods: {\n    chooseRandom: function() {\n      const randomAttendee = Math.floor(Math.random() * this.attendees.length);\n      this.displayAttendees = [this.attendees[randomAttendee]];\n    },\n    resetQuery() {\n      this.displayAttendees = this.attendees;\n      this.searchQuery = \"\";\n      this.$refs.searchQuery.focus();\n    },\n    toggleStar: function(attendeeID) {\n      if (this.user && this.user.uid == this.userID) {\n        const ref = db\n          .collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .doc(this.meetingID)\n          .collection(\"attendees\")\n          .doc(attendeeID);\n\n        ref.get().then(doc => {\n          const star = doc.data().star;\n          if (star) {\n            ref.update({\n              star: !star\n            });\n          } else {\n            ref.update({\n              star: true\n            });\n          }\n        });\n      }\n    },\n    deleteAttendee: function(attendeeID) {\n      if (this.user && this.user.uid == this.userID) {\n        db.collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .doc(this.meetingID)\n          .collection(\"attendees\")\n          .doc(attendeeID)\n          .delete();\n      }\n    }\n  },\n  props: [\"user\"],\n  mounted() {\n    db.collection(\"users\")\n      .doc(this.userID)\n      .collection(\"meetings\")\n      .doc(this.meetingID)\n      .collection(\"attendees\")\n      .onSnapshot(snapshot => {\n        const snapData = [];\n        snapshot.forEach(doc => {\n          snapData.push({\n            id: doc.id,\n            eMail: doc.data().eMail,\n            displayName: doc.data().displayName,\n            star: doc.data().star\n          });\n        });\n        this.attendees = snapData;\n        this.displayAttendees = this.attendees;\n      });\n  }\n};\n",{"version":3,"sources":["Attendees.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Attendees.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container mt-4\">\n\n    <div class=\"row justify-content-center\">\n      <div\n        class=\"col-md-8\"\n        v-if=\"user !== null && user.uid == userID\"\n      >\n        <h1 class=\"font-weight-light text-center\">Attendees</h1>\n\n        <div class=\"card bg-light mb-4\">\n          <div class=\"card-body text-center\">\n            <div class=\"input-group input-group-lg\">\n              <input\n                type=\"text\"\n                placeholder=\"Search Attendees\"\n                class=\"form-control\"\n                v-model=\"searchQuery\"\n                ref=\"searchQuery\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn btn-sm btn-outline-info\"\n                  title=\"Pick a random attendee\"\n                  @click=\"chooseRandom\"\n                >\n                  <font-awesome-icon icon=\"random\"></font-awesome-icon>\n                </button>\n                <button\n                  class=\"btn btn-sm btn-outline-info\"\n                  title=\"Reset Search\"\n                  @click=\"resetQuery\"\n                >\n                  <font-awesome-icon icon=\"undo\"></font-awesome-icon>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div\n        class=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\n        v-for=\"item in filteredAttendees\"\n        :key=\"item.id\"\n      >\n        <div class=\"card\">\n          <div class=\"card-body px-3 py-2 d-flex align-items-center justify-content-center\">\n            <div\n              class=\"btn-group pr-2\"\n              v-if=\"user !== null && user.uid == userID\"\n            >\n              <button\n                class=\"btn btn-sm\"\n                :class=\"[\n                  item.star ? 'text-danger': '', 'btn-outline-secondary'\n                ]\"\n                title=\"Give user a Star\"\n                @click=\"toggleStar(item.id)\"\n              >\n                <font-awesome-icon icon=\"star\"></font-awesome-icon>\n              </button>\n              <a\n                class=\"btn btn-sm btn-outline-secondary\"\n                title=\"Send user an email\"\n                :href=\"'mailto:' + item.eMail\"\n              >\n                <font-awesome-icon icon=\"envelope\"></font-awesome-icon>\n              </a>\n              <button\n                class=\"btn btn-sm btn-outline-secondary\"\n                title=\"Delete Attendee\"\n                @click=\"deleteAttendee(item.id)\"\n              >\n                <font-awesome-icon icon=\"trash\"></font-awesome-icon>\n              </button>\n\n            </div>\n            <div>{{item.displayName}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport db from \"../db.js\";\n\nexport default {\n  name: \"Attendees\",\n  data: function() {\n    return {\n      attendees: [],\n      displayAttendees: [],\n      searchQuery: \"\",\n      userID: this.$route.params.userID,\n      meetingID: this.$route.params.meetingID\n    };\n  },\n  components: {\n    FontAwesomeIcon\n  },\n  computed: {\n    filteredAttendees: function() {\n      const dataFilter = item =>\n        item.displayName.toLowerCase().match(this.searchQuery.toLowerCase()) &&\n        true;\n      return this.displayAttendees.filter(dataFilter);\n    }\n  },\n  methods: {\n    chooseRandom: function() {\n      const randomAttendee = Math.floor(Math.random() * this.attendees.length);\n      this.displayAttendees = [this.attendees[randomAttendee]];\n    },\n    resetQuery() {\n      this.displayAttendees = this.attendees;\n      this.searchQuery = \"\";\n      this.$refs.searchQuery.focus();\n    },\n    toggleStar: function(attendeeID) {\n      if (this.user && this.user.uid == this.userID) {\n        const ref = db\n          .collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .doc(this.meetingID)\n          .collection(\"attendees\")\n          .doc(attendeeID);\n\n        ref.get().then(doc => {\n          const star = doc.data().star;\n          if (star) {\n            ref.update({\n              star: !star\n            });\n          } else {\n            ref.update({\n              star: true\n            });\n          }\n        });\n      }\n    },\n    deleteAttendee: function(attendeeID) {\n      if (this.user && this.user.uid == this.userID) {\n        db.collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .doc(this.meetingID)\n          .collection(\"attendees\")\n          .doc(attendeeID)\n          .delete();\n      }\n    }\n  },\n  props: [\"user\"],\n  mounted() {\n    db.collection(\"users\")\n      .doc(this.userID)\n      .collection(\"meetings\")\n      .doc(this.meetingID)\n      .collection(\"attendees\")\n      .onSnapshot(snapshot => {\n        const snapData = [];\n        snapshot.forEach(doc => {\n          snapData.push({\n            id: doc.id,\n            eMail: doc.data().eMail,\n            displayName: doc.data().displayName,\n            star: doc.data().star\n          });\n        });\n        this.attendees = snapData;\n        this.displayAttendees = this.attendees;\n      });\n  }\n};\n</script>\n"]}]}