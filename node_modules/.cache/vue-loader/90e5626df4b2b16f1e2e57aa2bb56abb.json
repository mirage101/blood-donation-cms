{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Register.vue","mtime":1617177660902},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport firebase from \"firebase\";\n\nexport default {\n  data: function() {\n    return {\n      displayName: null,\n      email: null,\n      password:null,\n      passTwo: null,\n      error: null,\n      isAdmin: null,\n       firstName:null,\n         lastName:null,\n         city:null,\n         bloodType:null,\n         bloodFactor:null,\n         age:null,\n         telephone:null,\n    };\n  },\n  methods: {\n    async register() {\n          const info = { //variable contains infro from form\n            firstName: this.firstName,\n            lastName: this.lastName,\n            city: this.city,\n            bloodType: this.bloodType,\n            bloodFactor: this.bloodFactor,\n            age: this.age,            \n            telephone: this.telephone,\n         };\n         try {\n           var {\n             user\n           } = await firebase\n             .auth()\n             .createUserWithEmailAndPassword(this.email, this.password)\n           // signout\n           .then(\n            userCredentials => {\n              \n               console.log(userCredentials.user.uid)\n               const db = firebase.firestore();\n                db.collection(\"users\").add({\n                  user_id: userCredentials.user.uid,\n                  user_email:this.email,\n                  firstName: info.firstName,\n                  lastName: info.lastName,\n                  city: info.city,\n                  bloodType: info.bloodType,\n                  bloodFactor: info.bloodFactor,\n                  age: info.age,            \n                  telephone: info.telephone,\n                })\n                \n                .then((docRef) => {\n                   console.log(\"Document written with ID: \", docRef.id);\n                   console.log('redirect')\n                    \n                  this.$router.push(\"/\");                  \n                })\n                .catch((error) => {\n                  console.error(\"Error adding document: \", error);\n               });\n            }\n\n         )\n         } catch (error) {\n           console.log(error.message);\n         }\n       },\n       addRole(uid, userRole) {\n            \n            \n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\n\n            var data = { uid: uid, role: { userRole: true } };\n            console.log(data)\n            addMessage(data)\n                .then(function(result) {\n                    console.log(result);\n                })\n                .catch(function(error) {\n                    console.log(error)\n                });\n        },\n    // register: function() {\n    //   const info = { //variable contains infro from form\n    //     email: this.email,\n    //     password: this.passOne,\n    //     displayName: this.displayName,\n    //     isAdmin: this.isAdmin\n    //   };\n    //   if (!this.error) {\n    //     Firebase.auth()\n    //       .createUserWithEmailAndPassword(info.email, info.password)\n    //       .then(\n    //         userCredentials => {\n    //           return userCredentials.user\n    //             .updateProfile({\n    //               displayName: info.displayName,\n    //               isAdmin: info.isAdmin\n    //             })\n    //             .then(() => {\n    //               this.$router.replace(\"meetings\");\n    //               console.log(userCredentials.user.isAdmin)\n    //             });\n\n                \n    //         },\n    //         error => {\n    //           this.error = error.message;\n    //         }\n    //       );\n    //   }\n    // }\n  },\n  watch: {\n    passTwo: function() {\n      if (\n        this.passOne !== \"\" &&\n        this.passTwo !== \"\" &&\n        this.passTwo !== this.passOne\n      ) {\n        this.error = \"passwords must match\";\n      } else {\n        this.error = null;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n <div>\n     <form class=\"mt-3\" @submit.prevent=\"login\">\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg-6\">\n            <div class=\"card bg-light\">\n              <div class=\"card-body\">\n                <h3 class=\"font-weight-light mb-3\">Register for a blood donor</h3>\n         \n      \n  <div class=\"col-md-12 form-group\">\n    <label for=\"email\" class=\"form-label\">Email</label>\n     <input type=\"text\" name=\"email\" placeholder=\"E-mail address\" v-model=\"email\" class=\"form-control\"/>\n  </div>\n  <div class=\"col-md-12 form-group\">\n    <label for=\"password\" class=\"form-label\">Password</label>\n    <input type=\"password\" name=\"password\" placeholder=\"Password\" v-model=\"password\" class=\"form-control\"/>\n  </div>\n  <div class=\"col-12 form-group\">\n    <label for=\"city\" class=\"form-label\">City</label>\n      <input type=\"text\" name=\"city\" placeholder=\"City\" v-model=\"city\" class=\"form-control\"/>\n  </div>\n  <div class=\"col-12 form-group\">\n    <label for=\"telephone\" class=\"form-label\">Telephone</label>\n    <input type=\"tel\" name=\"telephone\" placeholder=\"ex. g. +22 111 22 11\" v-model=\"telephone\" class=\"form-control\"/>\n  </div>\n  <div class=\"col-md-12 form-group\">\n    <label for=\"inputCity\" class=\"form-label\">City</label>\n    <input type=\"text\" class=\"form-control\" id=\"inputCity\">\n  </div>\n <div class=\"col-md-12 form-group\">\n   <label for=\"inputCity\" class=\"form-label\">Age</label>\n    <input type=\"number\" name=\"age\" placeholder=\"Age\" v-model=\"age\" class=\"form-control\"/>\n </div>\n  <div class=\"col-md-12 form-group\">\n    <label for=\"blood type\" class=\"form-label\">Choose your blood type: </label>\n    <select id=\"inputState\" class=\"form-select\" name=\"blood type\" v-model=\"bloodType\">\n      <option selected>Choose...</option>\n      <option value=\"0\" selected>0</option>\n      <option value=\"A\">A</option>\n      <option value=\"B\">B</option>\n      <option value=\"AB\">AB</option>\n      <option value=\"unknown\">unknown</option>\n    </select>\n  </div>\n  <div class=\"col-md-12 form-group\">\n    <label for=\"inputState\" class=\"form-label\">Choose your blood factor: </label>\n    <select id=\"inputState\" class=\"form-select\" v-model=\"bloodFactor\">\n      <option value=\"-\" selected>-</option>\n      <option value=\"+\">+</option>           \n      <option value=\"unknown\">unknown</option>\n    </select>\n  </div>\n   <div class=\"col-12 form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" @click=\"register\">Register</button>\n  </div>\n    <div>\n            Have an account already?\n            <router-link :to=\"{ name: 'login' }\">Login</router-link>\n         </div>\n \n  </div>\n  </div>\n  </div>\n  </div>\n\n  </div>\n  \n</form>\n          \n       \n   </div>\n</template>\n<script>\nimport firebase from \"firebase\";\n\nexport default {\n  data: function() {\n    return {\n      displayName: null,\n      email: null,\n      password:null,\n      passTwo: null,\n      error: null,\n      isAdmin: null,\n       firstName:null,\n         lastName:null,\n         city:null,\n         bloodType:null,\n         bloodFactor:null,\n         age:null,\n         telephone:null,\n    };\n  },\n  methods: {\n    async register() {\n          const info = { //variable contains infro from form\n            firstName: this.firstName,\n            lastName: this.lastName,\n            city: this.city,\n            bloodType: this.bloodType,\n            bloodFactor: this.bloodFactor,\n            age: this.age,            \n            telephone: this.telephone,\n         };\n         try {\n           var {\n             user\n           } = await firebase\n             .auth()\n             .createUserWithEmailAndPassword(this.email, this.password)\n           // signout\n           .then(\n            userCredentials => {\n              \n               console.log(userCredentials.user.uid)\n               const db = firebase.firestore();\n                db.collection(\"users\").add({\n                  user_id: userCredentials.user.uid,\n                  user_email:this.email,\n                  firstName: info.firstName,\n                  lastName: info.lastName,\n                  city: info.city,\n                  bloodType: info.bloodType,\n                  bloodFactor: info.bloodFactor,\n                  age: info.age,            \n                  telephone: info.telephone,\n                })\n                \n                .then((docRef) => {\n                   console.log(\"Document written with ID: \", docRef.id);\n                   console.log('redirect')\n                    \n                  this.$router.push(\"/\");                  \n                })\n                .catch((error) => {\n                  console.error(\"Error adding document: \", error);\n               });\n            }\n\n         )\n         } catch (error) {\n           console.log(error.message);\n         }\n       },\n       addRole(uid, userRole) {\n            \n            \n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\n\n            var data = { uid: uid, role: { userRole: true } };\n            console.log(data)\n            addMessage(data)\n                .then(function(result) {\n                    console.log(result);\n                })\n                .catch(function(error) {\n                    console.log(error)\n                });\n        },\n    // register: function() {\n    //   const info = { //variable contains infro from form\n    //     email: this.email,\n    //     password: this.passOne,\n    //     displayName: this.displayName,\n    //     isAdmin: this.isAdmin\n    //   };\n    //   if (!this.error) {\n    //     Firebase.auth()\n    //       .createUserWithEmailAndPassword(info.email, info.password)\n    //       .then(\n    //         userCredentials => {\n    //           return userCredentials.user\n    //             .updateProfile({\n    //               displayName: info.displayName,\n    //               isAdmin: info.isAdmin\n    //             })\n    //             .then(() => {\n    //               this.$router.replace(\"meetings\");\n    //               console.log(userCredentials.user.isAdmin)\n    //             });\n\n                \n    //         },\n    //         error => {\n    //           this.error = error.message;\n    //         }\n    //       );\n    //   }\n    // }\n  },\n  watch: {\n    passTwo: function() {\n      if (\n        this.passOne !== \"\" &&\n        this.passTwo !== \"\" &&\n        this.passTwo !== this.passOne\n      ) {\n        this.error = \"passwords must match\";\n      } else {\n        this.error = null;\n      }\n    }\n  }\n};\n</script>\n"]}]}