{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewCenter.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewCenter.vue","mtime":1617122101524},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport db from '../../db'\nexport default {\n  name: 'view-center',\n  data () {\n    return {\n      location: 'city',\n      contacts: 'address',\n      work_time: '09:00 - 17:00',\n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    db.collection('centers').where('center_id', '==', to.params.center_id).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        next(vm => {\n          vm.center_id = doc.data().center_id;\n          vm.location = doc.data().location;\n          vm.contacts = doc.data().contacts;\n          vm.work_time = doc.data().work_time;   \n        })\n      })\n    })\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData () {\n      db.collection('centers').where('center_id', '==', this.$route.params.center_id).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.center_id = doc.data().center_id;\n          this.name = doc.data().name;\n          this.location = doc.data().location;\n          this.contacts = doc.data().contacts;\n          this.work_time = doc.data().work_time;          \n        })\n      })\n    },\n    deleteCenter (id) {\n      if(confirm ('Are you sure?')) {\n        db.collection('centers').where('center_id', '==', this.$route.params.center_id).get().then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            doc.ref.delete();\n            this.$router.push('/driver/manage-centers')\n          })\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["ViewCenter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewCenter.vue","sourceRoot":"src/views/doctor","sourcesContent":["<template>\r\n  <div id=\"view-page\">\r\n    <ul class=\"collection with-header\">\r\n      <li class=\"collection-item\">Center Location: {{location}}</li>\r\n      <li class=\"collection-item\">Center Contacts: {{descr}}</li>\r\n      <li class=\"collection-item\">Center work time: {{start}}</li>      \r\n    </ul>\r\n    <router-link to=\"/driver/manage-Centers\" class=\"btn grey\">Back</router-link>\r\n    <button @click=\"deleteCenter(center_id)\" class=\"btn red\">Delete</button>\r\n    <router-link v-bind:to=\"{ name: 'edit-center', params: { center_id: center_id }}\" class=\"btn red\">\r\n        Edit\r\n    </router-link>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  export default {\r\n    name: 'view-center',\r\n    data () {\r\n      return {\r\n        location: 'city',\r\n        contacts: 'address',\r\n        work_time: '09:00 - 17:00',\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('centers').where('center_id', '==', to.params.center_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.center_id = doc.data().center_id;\r\n            vm.location = doc.data().location;\r\n            vm.contacts = doc.data().contacts;\r\n            vm.work_time = doc.data().work_time;   \r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('centers').where('center_id', '==', this.$route.params.center_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            this.center_id = doc.data().center_id;\r\n            this.name = doc.data().name;\r\n            this.location = doc.data().location;\r\n            this.contacts = doc.data().contacts;\r\n            this.work_time = doc.data().work_time;          \r\n          })\r\n        })\r\n      },\r\n      deleteCenter (id) {\r\n        if(confirm ('Are you sure?')) {\r\n          db.collection('centers').where('center_id', '==', this.$route.params.center_id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              doc.ref.delete();\r\n              this.$router.push('/driver/manage-centers')\r\n            })\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}