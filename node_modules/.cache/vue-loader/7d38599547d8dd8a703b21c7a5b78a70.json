{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\ViewEvent.vue","mtime":1617215306944},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport db from '../../db'\nexport default {\n  name: 'view-event',\n  data () {\n    return {\n       name:'',\n      descr:'',\n      status:'enabled', //expired\n      end:'',\n      start:'',\n      type:'' //emergent, frequient  \n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    db.collection('events').where('id', '==', to.params.event_id).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        next(vm => {\n          vm.event_id = doc.data().id;\n          vm.name = doc.data().name;\n          vm.desc = doc.data().descr;\n          vm.start = doc.data().start;\n          vm.end = doc.data().end;\n          vm.status= doc.data().status;\n          vm.type= doc.data().type;\n          \n        })\n      })\n    })\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData () {\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.event_id = doc.data().event_id;\n          this.name = doc.data().name;\n          this.desc = doc.data().descr;\n          this.start = doc.data().start;\n          this.end = doc.data().end;\n          this.status= doc.data().status;\n          this.type= doc.data().type;            \n        })\n      })\n    },\n    deleteEvent (id) {\n      if(confirm ('Are you sure?')) {\n        db.collection('events').where('id', '==', this.$route.params.event_id).get().then((querySnapshot) => {\n          querySnapshot.forEach((doc) => {\n            doc.ref.delete();\n            this.$router.push('/driver/manage-events')\n          })\n        })\n      }\n    }\n  }\n}\n",{"version":3,"sources":["ViewEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewEvent.vue","sourceRoot":"src/views/doctor","sourcesContent":["<template>\r\n  <div id=\"view-page\">\r\n    <ul class=\"collection with-header\">\r\n      <li class=\"collection-header\"><h4>{{name}}</h4></li>\r\n      <li class=\"collection-item\">Event Name: {{name}}</li>\r\n      <li class=\"collection-item\">Event Description: {{descr}}</li>\r\n      <li class=\"collection-item\">Event start: {{start}}</li>\r\n      <li class=\"collection-item\">Event end: {{end}}</li>\r\n      <li class=\"collection-item\">Event status: {{status}}</li>\r\n      <li class=\"collection-item\">Event type: {{type}}</li>\r\n    </ul>\r\n    <router-link to=\"/driver/manage-events\" class=\"btn btn-secondary\">Back</router-link>\r\n    <button @click=\"deleteEvent(event_id)\" class=\"btn btn-danger\">Delete</button>\r\n    <router-link v-bind:to=\"{ name: 'edit-event', params: { page_id: event_id }}\" class=\"btn red\">\r\n        \r\n        Edit\r\n      </router-link>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../../db'\r\n  export default {\r\n    name: 'view-event',\r\n    data () {\r\n      return {\r\n         name:'',\r\n        descr:'',\r\n        status:'enabled', //expired\r\n        end:'',\r\n        start:'',\r\n        type:'' //emergent, frequient  \r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('events').where('id', '==', to.params.event_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.event_id = doc.data().id;\r\n            vm.name = doc.data().name;\r\n            vm.desc = doc.data().descr;\r\n            vm.start = doc.data().start;\r\n            vm.end = doc.data().end;\r\n            vm.status= doc.data().status;\r\n            vm.type= doc.data().type;\r\n            \r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            this.event_id = doc.data().event_id;\r\n            this.name = doc.data().name;\r\n            this.desc = doc.data().descr;\r\n            this.start = doc.data().start;\r\n            this.end = doc.data().end;\r\n            this.status= doc.data().status;\r\n            this.type= doc.data().type;            \r\n          })\r\n        })\r\n      },\r\n      deleteEvent (id) {\r\n        if(confirm ('Are you sure?')) {\r\n          db.collection('events').where('id', '==', this.$route.params.event_id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              doc.ref.delete();\r\n              this.$router.push('/driver/manage-events')\r\n            })\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}