{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ChangeUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\admin\\ChangeUser.vue","mtime":1616871759937},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,            \r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        \r\n    }\r\n};\r\n",{"version":3,"sources":["ChangeUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"ChangeUser.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n    <div>\r\n           \r\n\r\n                <h2>List of special users</h2>\r\n                <table class=\"ui celled table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>Role</th>                           \r\n                            <th>Edit</th>                            \r\n                            <th>Enable/disable</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"user in users\" :key=\"user.id\">\r\n                            <td data-label=\"Name\">{{user.email}} </td>\r\n                            <select @change=\"changeRole(user.id, $event)\">\r\n                                <option :selected=\"user.role.driver\" value=\"driver\">Doctor</option>\r\n                                <option :selected=\"user.role.admin\" value=\"admin\">Admin</option>                            \r\n                            </select>\r\n                            <td><button>edit</button></td>                           \r\n                            <td><button>disable</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport firebase from \"firebase\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            users: [],\r\n            user: null,            \r\n        };\r\n    },\r\n\r\n    created() {\r\n       \r\n        var self = this;\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            self.user = user;\r\n        });\r\n\r\n        this.users = [];\r\n        firebase\r\n            .firestore()\r\n            .collection(\"roles\")\r\n            .get()\r\n            .then(snap => {\r\n                snap.forEach(doc => {\r\n                    var user = doc.data();\r\n                    user.id = doc.id;\r\n                    console.log(doc.data());\r\n                    if (!user.role.donor ) this.users.push(user);\r\n                    //if (!user.role.customer) this.users.push(user);\r\n                    //if (!user.role.admin) this.users.push(user);\r\n                });\r\n            });\r\n\r\n    \r\n    },\r\n    //add watcher on updated\r\n    methods: {\r\n\r\n        changeRole(uid, event) {\r\n            var addMessage = firebase.functions().httpsCallable(\"setUserRole\");\r\n\r\n            var data = { uid: uid, role: { [event.target.value]: true } };\r\n            console.log(data)\r\n            addMessage(data)\r\n                .then(function(result) {\r\n                    console.log(result);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error)\r\n                });\r\n        },\r\n     \r\n        \r\n    }\r\n};\r\n</script>"]}]}