{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Register.vue?vue&type=template&id=63ae9146&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\Register.vue","mtime":1617177660902},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        staticClass: \"mt-3\",\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.login($event)\n          }\n        }\n      },\n      [\n        _c(\"div\", { staticClass: \"container\" }, [\n          _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n            _c(\"div\", { staticClass: \"col-lg-6\" }, [\n              _c(\"div\", { staticClass: \"card bg-light\" }, [\n                _c(\"div\", { staticClass: \"card-body\" }, [\n                  _c(\"h3\", { staticClass: \"font-weight-light mb-3\" }, [\n                    _vm._v(\"Register for a blood donor\")\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      { staticClass: \"form-label\", attrs: { for: \"email\" } },\n                      [_vm._v(\"Email\")]\n                    ),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.email,\n                          expression: \"email\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"email\",\n                        placeholder: \"E-mail address\"\n                      },\n                      domProps: { value: _vm.email },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.email = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      { staticClass: \"form-label\", attrs: { for: \"password\" } },\n                      [_vm._v(\"Password\")]\n                    ),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.password,\n                          expression: \"password\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"password\",\n                        name: \"password\",\n                        placeholder: \"Password\"\n                      },\n                      domProps: { value: _vm.password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.password = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      { staticClass: \"form-label\", attrs: { for: \"city\" } },\n                      [_vm._v(\"City\")]\n                    ),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.city,\n                          expression: \"city\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"city\",\n                        placeholder: \"City\"\n                      },\n                      domProps: { value: _vm.city },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.city = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-label\",\n                        attrs: { for: \"telephone\" }\n                      },\n                      [_vm._v(\"Telephone\")]\n                    ),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.telephone,\n                          expression: \"telephone\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"tel\",\n                        name: \"telephone\",\n                        placeholder: \"ex. g. +22 111 22 11\"\n                      },\n                      domProps: { value: _vm.telephone },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.telephone = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _vm._m(0),\n                  _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-label\",\n                        attrs: { for: \"inputCity\" }\n                      },\n                      [_vm._v(\"Age\")]\n                    ),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.age,\n                          expression: \"age\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"number\",\n                        name: \"age\",\n                        placeholder: \"Age\"\n                      },\n                      domProps: { value: _vm.age },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.age = $event.target.value\n                        }\n                      }\n                    })\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-label\",\n                        attrs: { for: \"blood type\" }\n                      },\n                      [_vm._v(\"Choose your blood type: \")]\n                    ),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.bloodType,\n                            expression: \"bloodType\"\n                          }\n                        ],\n                        staticClass: \"form-select\",\n                        attrs: { id: \"inputState\", name: \"blood type\" },\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.bloodType = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          }\n                        }\n                      },\n                      [\n                        _c(\"option\", { attrs: { selected: \"\" } }, [\n                          _vm._v(\"Choose...\")\n                        ]),\n                        _c(\"option\", { attrs: { value: \"0\", selected: \"\" } }, [\n                          _vm._v(\"0\")\n                        ]),\n                        _c(\"option\", { attrs: { value: \"A\" } }, [_vm._v(\"A\")]),\n                        _c(\"option\", { attrs: { value: \"B\" } }, [_vm._v(\"B\")]),\n                        _c(\"option\", { attrs: { value: \"AB\" } }, [\n                          _vm._v(\"AB\")\n                        ]),\n                        _c(\"option\", { attrs: { value: \"unknown\" } }, [\n                          _vm._v(\"unknown\")\n                        ])\n                      ]\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-label\",\n                        attrs: { for: \"inputState\" }\n                      },\n                      [_vm._v(\"Choose your blood factor: \")]\n                    ),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.bloodFactor,\n                            expression: \"bloodFactor\"\n                          }\n                        ],\n                        staticClass: \"form-select\",\n                        attrs: { id: \"inputState\" },\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.bloodFactor = $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          }\n                        }\n                      },\n                      [\n                        _c(\"option\", { attrs: { value: \"-\", selected: \"\" } }, [\n                          _vm._v(\"-\")\n                        ]),\n                        _c(\"option\", { attrs: { value: \"+\" } }, [_vm._v(\"+\")]),\n                        _c(\"option\", { attrs: { value: \"unknown\" } }, [\n                          _vm._v(\"unknown\")\n                        ])\n                      ]\n                    )\n                  ]),\n                  _c(\"div\", { staticClass: \"col-12 form-group\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-primary\",\n                        attrs: { type: \"submit\" },\n                        on: { click: _vm.register }\n                      },\n                      [_vm._v(\"Register\")]\n                    )\n                  ]),\n                  _c(\n                    \"div\",\n                    [\n                      _vm._v(\n                        \"\\n            Have an account already?\\n            \"\n                      ),\n                      _c(\"router-link\", { attrs: { to: { name: \"login\" } } }, [\n                        _vm._v(\"Login\")\n                      ])\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ])\n          ])\n        ])\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col-md-12 form-group\" }, [\n      _c(\"label\", { staticClass: \"form-label\", attrs: { for: \"inputCity\" } }, [\n        _vm._v(\"City\")\n      ]),\n      _c(\"input\", {\n        staticClass: \"form-control\",\n        attrs: { type: \"text\", id: \"inputCity\" }\n      })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}