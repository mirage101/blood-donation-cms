{"remainingRequest":"D:\\Vue\\projects\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue\\projects\\vue-spas-master\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Vue\\projects\\vue-spas-master\\src\\App.vue","mtime":1586355489507},{"path":"D:\\Vue\\projects\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\projects\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Vue\\projects\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\projects\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navigation from \"@/components/Navigation.vue\";\nimport Firebase from \"firebase\";\nimport db from \"./db.js\";\n\nexport default {\n  name: \"App\",\n  data: function() {\n    return {\n      user: null,\n      error: null,\n      meetings: []\n    };\n  },\n  methods: {\n    logout: function() {\n      Firebase.auth()\n        .signOut()\n        .then(() => {\n          this.user = null; //reset user\n          this.$router.push(\"login\"); //reroute to login\n        });\n    },\n    addMeeting: function(payload) {\n      db.collection(\"users\")\n        .doc(this.user.uid)\n        .collection(\"meetings\")\n        .add({\n          name: payload,\n          createdAt: Firebase.firestore.FieldValue.serverTimestamp()\n        });\n    },\n    deleteMeeting: function(payload) {\n      db.collection(\"users\")\n        .doc(this.user.uid)\n        .collection(\"meetings\")\n        .doc(payload)\n        .delete();\n    },\n    checkIn: function(payload) {\n      console.log(payload)\n      db.collection(\"users\")\n        .doc(payload.userID)\n        .collection(\"meetings\")\n        .doc(payload.meetingID)\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            db.collection(\"users\")\n              .doc(payload.userID)\n              .collection(\"meetings\")\n              .doc(payload.meetingID)\n              .collection(\"attendees\")\n              .add({\n                displayName: payload.displayName,\n                eMail: payload.eMail,\n                createdAt: Firebase.firestore.FieldValue.serverTimestamp()\n              })\n              .then(() =>\n                this.$router.push(\n                  \"/attendees/\" + payload.userID + \"/\" + payload.meetingID\n                )\n              );\n          } else {\n            this.error = \"Sorry, no such meeting\";\n          }\n        });\n    }\n  },\n  mounted() {\n    Firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.user = user;\n\n        db.collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .onSnapshot(snapshot => {\n            const snapData = [];\n            snapshot.forEach(doc => {\n              snapData.push({\n                id: doc.id,\n                name: doc.data().name\n              });\n            });\n            this.meetings = snapData.sort((a, b) => {\n              if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                return -1;\n              } else {\n                return 1;\n              }\n            });\n          });\n      }\n    });\n  },\n  components: {\n    Navigation\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Navigation\n      :user=\"user\"\n      @logout=\"logout\"\n    />\n    <router-view\n      class=\"container\"\n      :user=\"user\"\n      :meetings=\"meetings\"\n      :error=\"error\"\n      @logout=\"logout\"\n      @addMeeting=\"addMeeting\"\n      @deleteMeeting=\"deleteMeeting\"\n      @checkIn=\"checkIn\"\n    />\n  </div>\n</template>\n\n<script>\nimport Navigation from \"@/components/Navigation.vue\";\nimport Firebase from \"firebase\";\nimport db from \"./db.js\";\n\nexport default {\n  name: \"App\",\n  data: function() {\n    return {\n      user: null,\n      error: null,\n      meetings: []\n    };\n  },\n  methods: {\n    logout: function() {\n      Firebase.auth()\n        .signOut()\n        .then(() => {\n          this.user = null; //reset user\n          this.$router.push(\"login\"); //reroute to login\n        });\n    },\n    addMeeting: function(payload) {\n      db.collection(\"users\")\n        .doc(this.user.uid)\n        .collection(\"meetings\")\n        .add({\n          name: payload,\n          createdAt: Firebase.firestore.FieldValue.serverTimestamp()\n        });\n    },\n    deleteMeeting: function(payload) {\n      db.collection(\"users\")\n        .doc(this.user.uid)\n        .collection(\"meetings\")\n        .doc(payload)\n        .delete();\n    },\n    checkIn: function(payload) {\n      console.log(payload)\n      db.collection(\"users\")\n        .doc(payload.userID)\n        .collection(\"meetings\")\n        .doc(payload.meetingID)\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            db.collection(\"users\")\n              .doc(payload.userID)\n              .collection(\"meetings\")\n              .doc(payload.meetingID)\n              .collection(\"attendees\")\n              .add({\n                displayName: payload.displayName,\n                eMail: payload.eMail,\n                createdAt: Firebase.firestore.FieldValue.serverTimestamp()\n              })\n              .then(() =>\n                this.$router.push(\n                  \"/attendees/\" + payload.userID + \"/\" + payload.meetingID\n                )\n              );\n          } else {\n            this.error = \"Sorry, no such meeting\";\n          }\n        });\n    }\n  },\n  mounted() {\n    Firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.user = user;\n\n        db.collection(\"users\")\n          .doc(this.user.uid)\n          .collection(\"meetings\")\n          .onSnapshot(snapshot => {\n            const snapData = [];\n            snapshot.forEach(doc => {\n              snapData.push({\n                id: doc.id,\n                name: doc.data().name\n              });\n            });\n            this.meetings = snapData.sort((a, b) => {\n              if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                return -1;\n              } else {\n                return 1;\n              }\n            });\n          });\n      }\n    });\n  },\n  components: {\n    Navigation\n  }\n};\n</script>\n\n\n<style lang=\"scss\">\n$primary: #05b2dd;\n@import \"node_modules/bootstrap/scss/bootstrap\";\n</style>\n"]}]}