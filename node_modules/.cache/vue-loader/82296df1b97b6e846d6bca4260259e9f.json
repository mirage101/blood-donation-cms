{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\views\\doctor\\EditPage.vue","mtime":1617121931874},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport db from '../db'\nimport { VueEditor } from \"vue2-editor\";\n\nexport default {\n  name: 'edit-page',\n  data () {\n    return {\n      page_id: null,\n      name: null,\n      content: \"<h1>Some initial content</h1>\",\n      path: null,\n      order: null,\n      access: null\n    }\n  },\n  beforeRouteEnter (to, from, next) {\n    db.collection('pages').where('page_id', '==', to.params.page_id).get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        next(vm => {\n          vm.page_id = doc.data().page_id;\n          vm.name = doc.data().name;\n          vm.content = doc.data().content;\n          vm.path = doc.data().path;\n          vm.order = doc.data().order;\n          vm.access= doc.data().access;\n        })\n      })\n    })\n  },\n  watch: {\n    '$route': 'fetchData'\n  },\n  methods: {\n    fetchData () {\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n           this.page_id = doc.data().page_id;\n          this.name = doc.data().name;\n           this.content = doc.data().content;\n           this.path = doc.data().path;\n           this.order = doc.data().order;\n           this.access= doc.data().access;  \n        })\n      })\n    },\n    updatePage () {\n      db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          doc.ref.update({\n            page_id: this.page_id,\n            name: this.name,\n            content: this.content,\n            path: this.path,\n            order: this.order,\n            access: this.access\n          })\n          .then(() => {\n            this.$router.push({ name: 'view-page', params: { page_id: this.page_id }})\n          });\n        })\n      })\n    }\n  }\n}\n",{"version":3,"sources":["EditPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditPage.vue","sourceRoot":"src/views/doctor","sourcesContent":["<template>\r\n  <div id=\"new-page\">\r\n    <h3>Edit Page</h3>\r\n    <div class=\"row\">\r\n    <form @submit.prevent=\"updatePage\" class=\"col s12\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"page_id\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"name\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <vue-editor v-model=\"content\" />        \r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"path\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"access\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input type=\"text\" v-model=\"order\" required>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn\">Submit</button>\r\n      <router-link to=\"/\" class=\"btn grey\">Cancel</router-link>\r\n    </form>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import db from '../db'\r\n  import { VueEditor } from \"vue2-editor\";\r\n\r\n  export default {\r\n    name: 'edit-page',\r\n    data () {\r\n      return {\r\n        page_id: null,\r\n        name: null,\r\n        content: \"<h1>Some initial content</h1>\",\r\n        path: null,\r\n        order: null,\r\n        access: null\r\n      }\r\n    },\r\n    beforeRouteEnter (to, from, next) {\r\n      db.collection('pages').where('page_id', '==', to.params.page_id).get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          next(vm => {\r\n            vm.page_id = doc.data().page_id;\r\n            vm.name = doc.data().name;\r\n            vm.content = doc.data().content;\r\n            vm.path = doc.data().path;\r\n            vm.order = doc.data().order;\r\n            vm.access= doc.data().access;\r\n          })\r\n        })\r\n      })\r\n    },\r\n    watch: {\r\n      '$route': 'fetchData'\r\n    },\r\n    methods: {\r\n      fetchData () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n             this.page_id = doc.data().page_id;\r\n            this.name = doc.data().name;\r\n             this.content = doc.data().content;\r\n             this.path = doc.data().path;\r\n             this.order = doc.data().order;\r\n             this.access= doc.data().access;  \r\n          })\r\n        })\r\n      },\r\n      updatePage () {\r\n        db.collection('pages').where('page_id', '==', this.$route.params.page_id).get().then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            doc.ref.update({\r\n              page_id: this.page_id,\r\n              name: this.name,\r\n              content: this.content,\r\n              path: this.path,\r\n              order: this.order,\r\n              access: this.access\r\n            })\r\n            .then(() => {\r\n              this.$router.push({ name: 'view-page', params: { page_id: this.page_id }})\r\n            });\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}