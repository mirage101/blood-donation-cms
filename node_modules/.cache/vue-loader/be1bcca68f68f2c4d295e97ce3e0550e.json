{"remainingRequest":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\src\\App.vue","mtime":1617222989687},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Projects\\Vue\\NEW\\vue-spas-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Header from \"@/components/Header.vue\";\nimport Footer from \"@/components/Footer.vue\";\nimport firebase from \"firebase\";\nimport db from \"./db.js\";\n\nexport default {\n  name: \"App\",\n  data: function() {\n    return {\n      user: null,\n      error: null,\n      meetings: [],\n       userstate:false,\n      isAdmin:false,\n      isDriver: false,\n      isDonor: false\n    };\n  },\n  methods: {\n    logout: function() {\n      firebase.auth()\n        .signOut()\n        .then(() => {\n          this.isAdmin = false;\n          this.isDriver = false;\n          this.isDonor = false;\n          this.user = null; //reset user\n          this.$router.push(\"login\"); //reroute to login\n        });\n    },\n    \n    checkIn: function(payload) {\n      console.log(payload)\n      console.log(payload.user_id)\n      console.log(payload.event_id)\n      db.collection(\"users\")\n        .doc(payload.user_id)        \n        .collection(\"events\")\n        .doc(payload.event_id)\n        .get()\n        .then(doc => {   \n          \n          if (!doc.exists) {\n            console.log('ima')\n            db.collection(\"users\")\n              .doc(payload.user_id)\n              .collection(\"events\")\n              .doc(payload.event_id)\n              .collection(\"donorlist\")\n              .set({\n                user_id: payload.user_id,\n                event_id: payload.event_id,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              })\n              .then(() =>{\n              console.log(payload.user_id, payload.event_id)\n                this.$router.push(\n                  \"donor/enlist\"\n                )\n                }\n              );\n          } else {\n            this.error = \"Sorry, no such event\";\n          }\n        });\n    }\n  },\n  mounted() {\n    \n    firebase.auth().onAuthStateChanged(user => {\n            if (user) {  \n                this.userstate = true;\n            } else { \n                this.userstate = false;\n            } \n        });\n        \n        //check user roles\n         firebase.auth().onAuthStateChanged(userAuth => {\n            if (userAuth) {\n                firebase\n                    .auth()\n                    .currentUser.getIdTokenResult()\n                    .then(tokenResult => {\n                        console.log('tokenResult.claims.donor: ' + tokenResult.claims)\n                        if(tokenResult.claims.admin){\n                            this.isAdmin = true\n                        }else if(tokenResult.claims.driver){\n                            this.isDriver = true\n                        }else if(tokenResult.claims.donor){\n                            this.isDonor = true\n                        }\n                         console.log(this.isAdmin)\n                    });\n            }         \n          });\n      },\n   \n  \n  components: {\n    Header,\n    Footer\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Header\n      :user=\"user\"\n      :userstate=\"userstate\"     \n      :isAdmin=\"isAdmin\"\n      :isDonor=\"isDonor\"\n      :isDriver=\"isDriver\"\n      @logout=\"logout\"\n    />\n    <Footer />\n    <router-view\n      class=\"container\"\n      :user=\"user\"\n      :userstate=\"userstate\"     \n      :isAdmin=\"isAdmin\"\n      :isDonor=\"isDonor\"\n      :isDriver=\"isDriver\"\n      :meetings=\"meetings\"\n      :error=\"error\"\n      @logout=\"logout\"\n      @checkIn=\"checkIn\"\n    />\n  </div>\n</template>\n\n<script>\nimport Header from \"@/components/Header.vue\";\nimport Footer from \"@/components/Footer.vue\";\nimport firebase from \"firebase\";\nimport db from \"./db.js\";\n\nexport default {\n  name: \"App\",\n  data: function() {\n    return {\n      user: null,\n      error: null,\n      meetings: [],\n       userstate:false,\n      isAdmin:false,\n      isDriver: false,\n      isDonor: false\n    };\n  },\n  methods: {\n    logout: function() {\n      firebase.auth()\n        .signOut()\n        .then(() => {\n          this.isAdmin = false;\n          this.isDriver = false;\n          this.isDonor = false;\n          this.user = null; //reset user\n          this.$router.push(\"login\"); //reroute to login\n        });\n    },\n    \n    checkIn: function(payload) {\n      console.log(payload)\n      console.log(payload.user_id)\n      console.log(payload.event_id)\n      db.collection(\"users\")\n        .doc(payload.user_id)        \n        .collection(\"events\")\n        .doc(payload.event_id)\n        .get()\n        .then(doc => {   \n          \n          if (!doc.exists) {\n            console.log('ima')\n            db.collection(\"users\")\n              .doc(payload.user_id)\n              .collection(\"events\")\n              .doc(payload.event_id)\n              .collection(\"donorlist\")\n              .set({\n                user_id: payload.user_id,\n                event_id: payload.event_id,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              })\n              .then(() =>{\n              console.log(payload.user_id, payload.event_id)\n                this.$router.push(\n                  \"donor/enlist\"\n                )\n                }\n              );\n          } else {\n            this.error = \"Sorry, no such event\";\n          }\n        });\n    }\n  },\n  mounted() {\n    \n    firebase.auth().onAuthStateChanged(user => {\n            if (user) {  \n                this.userstate = true;\n            } else { \n                this.userstate = false;\n            } \n        });\n        \n        //check user roles\n         firebase.auth().onAuthStateChanged(userAuth => {\n            if (userAuth) {\n                firebase\n                    .auth()\n                    .currentUser.getIdTokenResult()\n                    .then(tokenResult => {\n                        console.log('tokenResult.claims.donor: ' + tokenResult.claims)\n                        if(tokenResult.claims.admin){\n                            this.isAdmin = true\n                        }else if(tokenResult.claims.driver){\n                            this.isDriver = true\n                        }else if(tokenResult.claims.donor){\n                            this.isDonor = true\n                        }\n                         console.log(this.isAdmin)\n                    });\n            }         \n          });\n      },\n   \n  \n  components: {\n    Header,\n    Footer\n  }\n};\n</script>\n\n\n<style lang=\"scss\">\n$primary: red;\n@import \"node_modules/bootstrap/scss/bootstrap\";\n.vert-offset-top-2{\n    margin-top: 2em;\n}\n#view-page,\n#new-page{\n  a{\n    margin: 0 1em;\n  }\n}\n.collection{\n  margin:1em 0 2em 0;\n}\n.input-field {\n  margin:0 0 2em 0;\n  label{\n    width: 100%;\n    display: inline-block;\n  }\n}\n.edit-profile{\n  button{\n    margin:1em;\n  }\n}\n</style>\n"]}]}